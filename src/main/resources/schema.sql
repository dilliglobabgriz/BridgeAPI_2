-- H2 Dialect Schema for Spring Boot

DROP TABLE IF EXISTS card;
DROP TABLE IF EXISTS trick;
DROP TABLE IF EXISTS bid;
DROP TABLE IF EXISTS hand;
DROP TABLE IF EXISTS round;
DROP TABLE IF EXISTS game;
DROP TABLE IF EXISTS player;

--|================================================================================================|
CREATE TABLE player (
    playerId    INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY, -- Use H2 standard identity
    botVersion  INTEGER DEFAULT 1,
    playerName  VARCHAR(255) DEFAULT 'Computer'
);

--|================================================================================================|
CREATE TABLE game (
    gameId                  INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY, -- Use H2 standard identity
    northId                 INTEGER NOT NULL,
    eastId                  INTEGER NOT NULL,
    southId                 INTEGER NOT NULL,
    westId                  INTEGER NOT NULL,
    firstDealerDirection    INTEGER DEFAULT 0,   -- Optional, will default to 0 (North)
    northSouthScore         INTEGER DEFAULT 0,
    eastWestScore           INTEGER DEFAULT 0,

    FOREIGN KEY(eastId) REFERENCES player(playerId),
    FOREIGN KEY(northId) REFERENCES player(playerId),
    FOREIGN KEY(southId) REFERENCES player(playerId),
    FOREIGN KEY(westId) REFERENCES player(playerId),

    CONSTRAINT gameDealerCheck CHECK (firstDealerDirection BETWEEN 0 AND 3) -- Example Check
);

--|================================================================================================|
CREATE TABLE round (
    roundId                 INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY, -- Use H2 standard identity
    gameId                  INTEGER NOT NULL,
    roundNumber             INTEGER NOT NULL, -- Sequence number within the game

    dealerDirection         INTEGER,
    declarerDirection       INTEGER,
    northSouthVulnerable    INTEGER DEFAULT 0, -- Typically 0=No, 1=Yes
    eastWestVulnerable      INTEGER DEFAULT 0, -- Typically 0=No, 1=Yes

    -- Contract information (denormalized, updated after bidding)
    contractSuit            INTEGER,          -- e.g., 0=C, 1=D, 2=H, 3=S, 4=NT
    contractLevel           INTEGER,          -- 1-7
    contractModifier        INTEGER DEFAULT 0,-- 0=Undoubled, 1=Doubled, 2=Redoubled

    -- Results (updated after play)
    northSouthTricksTaken   INTEGER DEFAULT 0,
    eastWestTricksTaken     INTEGER DEFAULT 0,

    FOREIGN KEY(gameId) REFERENCES game(gameId)
);

--|================================================================================================|
CREATE TABLE hand (
    handId      INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY, -- Use H2 standard identity
    roundId     INTEGER NOT NULL,
    playerId    INTEGER NOT NULL,
    cards       TEXT NOT NULL,  -- String like "AH,TD,5S,KC..." (always 13 cards)

    FOREIGN KEY(playerId) REFERENCES player(playerId),
    FOREIGN KEY(roundId) REFERENCES round(roundId)
);

--|================================================================================================|
CREATE TABLE bid (
    bidId           INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY, -- Use H2 standard identity
    roundId         INTEGER NOT NULL,
    direction       INTEGER NOT NULL, -- Player direction making the bid (0-3)
    suit            INTEGER,          -- e.g., 0=C, 1=D, 2=H, 3=S, 4=NT (NULL for Pass/Double/Redouble)
    level           INTEGER,          -- 1-7 (NULL for Pass/Double/Redouble)
    bidType         INTEGER NOT NULL, -- 0=Pass, 1=Bid, 2=Double, 3=Redouble
    bidSequence     INTEGER NOT NULL, -- Order of bids within the round (0, 1, 2...)

    FOREIGN KEY(roundId) REFERENCES round(roundId)
);

--|================================================================================================|
CREATE TABLE trick (
    trickId             INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY, -- Use H2 standard identity
    roundId             INTEGER NOT NULL,
    trickNumber         INTEGER NOT NULL, -- 1-13
    leaderDirection     INTEGER NOT NULL, -- Player direction leading the trick (0-3)
    winningDirection    INTEGER,          -- Player direction winning the trick (0-3)

    FOREIGN KEY(roundId) REFERENCES round(roundId)
);

--|================================================================================================|
CREATE TABLE card (
    cardId          INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY, -- Use H2 standard identity
    trickId         INTEGER NOT NULL,
    playerDirection INTEGER NOT NULL, -- Direction of the player playing the card (0-3)
    suit            INTEGER NOT NULL, -- e.g., 0=C, 1=D, 2=H, 3=S
    rank            INTEGER NOT NULL, -- e.g., 2-10, 11=J, 12=Q, 13=K, 14=A
    playSequence    INTEGER NOT NULL, -- Order card played in the trick (0-3)

    FOREIGN KEY(trickId) REFERENCES trick(trickId)
);

-- Add Indexes for common lookups (Optional but recommended)
CREATE INDEX idxRoundGameId ON round(gameId);
CREATE INDEX idxHandRoundId ON hand(roundId);
CREATE INDEX idxHandPlayerId ON hand(playerId);
CREATE INDEX idxBidRoundId ON bid(roundId);
CREATE INDEX idxTrickRoundId ON trick(roundId);
CREATE INDEX idxCardTrickId ON card(trickId);
